---
trigger:
  branches:
    include:
    - master
    - develop
  paths:
    include:
    - deploy/terraform/*

variables:
  MANUAL_USERNAME: $(SECRET_MANUAL_USERNAME)
  MANUAL_PASSWORD: $(SECRET_MANUAL_PASSWORD)

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: Bash@3
  displayName: 'Set environment'
  inputs:
    failOnStderr: true
    targetType: inline
    script: |
      if [ "$BUILD_SOURCEBRANCH" = "refs/heads/master" ]; then
        ENVIRONMENT=production
      else
        ENVIRONMENT=staging
      fi
      echo "##vso[task.setvariable variable=ENVIRONMENT]$ENVIRONMENT"
      echo "##vso[build.addbuildtag]$ENVIRONMENT"

- task: AzureCLI@1
  displayName: 'Get storage account key'
  inputs:
    failOnStandardError: true
    azureSubscription: 'www.nhs.uk (1e543650-5458-44ea-a3b1-35a6d0d92cc9)'
    scriptLocation: inlineScript
    inlineScript: |
      access_key=$(az storage account keys list -g tfbackends -n tfbackends --subscription www.nhs.uk | jq -r '.[0].value')
      echo "##vso[task.setvariable variable=STORAGE_ACCOUNT_KEY]$access_key"

- task: AzureCLI@1
  displayName: 'terraform plan'
  inputs:
    failOnStandardError: true
    azureSubscription: 'Beta.nhs.uk (d29bb595-46d1-4c56-82c4-9f2e0062c2da)'
    workingDirectory: '$(System.DefaultWorkingDirectory)/deploy/terraform'
    addSpnToEnvironment: true
    scriptLocation: inlineScript
    inlineScript: |
      export ARM_CLIENT_ID="$servicePrincipalId"
      export ARM_CLIENT_SECRET="$servicePrincipalKey"
      export ARM_TENANT_ID=$(az account show | jq -r '.tenantId')
      export ARM_SUBSCRIPTION_ID=$(az account show | jq -r '.id')
      
      terraform init -backend-config="key=nhs-service-manual.$ENVIRONMENT.terraform.tfstate" -backend-config="access_key=$STORAGE_ACCOUNT_KEY" -reconfigure
      
      terraform plan -input=false -out=terraform.plan
  env:
    TF_VAR_manual_username: $(MANUAL_USERNAME)
    TF_VAR_manual_password: $(MANUAL_PASSWORD)
    TF_VAR_environment: $(ENVIRONMENT)

- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/deploy/terraform'
    includeRootFolder: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts: drop'
