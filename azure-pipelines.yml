trigger:
  branches:
    include:
    - main
    - master
    - ia-site
    - refs/tags/v*
    - refs/heads/review/*
    - refs/heads/dev/*
    - refs/heads/user/*
  paths:
    exclude:
    - CHANGELOG.md
    - README.md

pool:
  vmImage: 'ubuntu-latest'

steps:

  - script: npm ci
    displayName: 'Install'

  - task: SonarCloudPrepare@1
    displayName: 'Prepare analysis on SonarCloud'
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'nhsdigital'
      scannerMode: 'CLI'
      extraProperties: |
        sonar.projectKey=nhsuk-service-manual
        sonar.exclusions=$(System.DefaultWorkingDirectory)/dependency-scan-results/**
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
        sonar.coverage.exclusions=**/*.config.js,**/coverage/**
        sonar.dependencyCheck.htmlReportPath=$(System.DefaultWorkingDirectory)/dependency-scan-results/dependency-check-report.html
        sonar.language=js

  - script: npm run build
    displayName: 'Build'

  - script: npm run test
    displayName: 'Test'

  - task: SonarCloudAnalyze@1
    displayName: 'Run SonarCloud Code Analysis'

  - task: SonarCloudPublish@1
    displayName: 'Publish Quality Gate Result'
    inputs:
      pollingTimeoutSec: '300'

  - task: sonarcloud-buildbreaker@2
    displayName: "Break the build if the quality gate fails"
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'nhsdigital'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
      includeRootFolder: false
    displayName: 'Create file archive to publish'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish files to Azure Pipelines'
