{% set pageTitle = "Text input" %}
{% set pageSection = "Design system" %}
{% set subSection = "Components" %}
{% set pageDescription = "Use text input to let users enter a single line of text." %}
{% set theme = "Form elements" %}
{% set dateUpdated = "October 2023" %}
{% set backlog_issue_id = "21" %}

{% extends "includes/app-layout.njk" %}

{% block breadcrumb %}
  {% include "design-system/components/_breadcrumb.njk" %}
{% endblock %}

{% block bodyContent %}

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "default"
  }) }}

  <h2>When to use the text input component</h2>
  <p>Use the text input component when you need users to enter text that's no longer than a single line, such as their name or phone number.</p>

  <h2>When not to use the text input component</h2>
  <p>Do not use this component if you need users to enter longer answers that might span several lines. In this case, use the <a href="/design-system/components/textarea">textarea component</a>.</p>
  <h2>How to use the text input component</h2>

  <h3 id="give-the-text-input-a-label">Give the text input a label</h3>
  <p>Give it a visible label. Do not use placeholder text for a label as it vanishes when users click on the text input.</p>
  <p>Align labels above the text inputs they refer to. Labels should be short, direct and written in sentence case. Do not use colons at the end of labels.</p>
  <p class="rich-text">If you are asking just <a href="/content/how-to-write-good-questions-for-forms/get-the-questions-into-order#begin-prototyping-with-1-thing-per-page">1 question per page</a> as we recommend, you can set the contents of the <code>&lt;label&gt;</code> as the page heading. This is good practice as it means that screen reader users will only hear the contents once.</p>

  <h3 id="use-appropriately-sized-text-inputs">Make text inputs the right size</h3>
  <p>Help users understand what they should enter by making text inputs the right size for the information you want them to give you.</p>
  <p>By default, the width of text inputs is fluid and will fit the full width of the container they are placed into.</p>
  <p>If you want to make the input smaller, you can either use a fixed width input, or use the width override classes to create a smaller, <a href="#fluid-width-inputs">fluid width input</a>.</p>

  <h4 id="fixed-width-inputs">Fixed width inputs</h4>
  <p>Use fixed width inputs for content that has a specific, known length. For example, postcode inputs should be postcode-sized and phone number inputs should be phone number-sized.</p>
  <p>On fixed width inputs, the width will remain fixed on all screens unless it is wider than the viewport, in which case it will shrink to fit.</p>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "fixed-width"
  }) }}

  <h4 id="fluid-width-inputs">Fluid width inputs</h4>
  <p>Use the width override classes to reduce the width of an input in relation to its parent container, for example, to two-thirds.</p>
  <p>Fluid width inputs will resize with the viewport.</p>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "fluid-width"
  }) }}

  <h3 id="using-hint-text">Using hint text</h3>
  <p>You can use hint text to <a href="/content/how-to-write-good-questions-for-forms/write-the-supporting-content-for-your-form#give-users-help-in-context">give users help in context</a>, so they understand what they need to enter. For example, use it to tell users where to find information or how you will use their data.</p>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "hint-text"
  }) }}

  <h3 id="asking-for-numbers">Asking for numbers</h3>
  <h4 id="whole-numbers">Whole numbers</h4>
  <p>If you're asking the user to enter a whole number and you want to bring up the numeric keypad on a mobile device, set the <code>inputmode</code> attribute to <code>numeric</code> and the <code>pattern</code> attribute to <code>[0-9]*</code>. See how to do this in the HTML and Nunjucks tabs in the following example.</p>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "number"
  }) }}

  <p>You should also follow the GOV.UK Design System guidance and <a href="https://design-system.service.gov.uk/patterns/validation/#turn-off-html5-validation">turn off HTML5 validation</a> to prevent browsers from validating the <code>pattern</code> attribute.</p>

  <p>The GOV.UK Design System has specific guidance on how to ask for:</p>
  <ul>
    <li><a href="https://design-system.service.gov.uk/patterns/dates/">dates</a></li>
    <li><a href="https://design-system.service.gov.uk/patterns/telephone-numbers/">telephone numbers</a></li>
  </ul>
  <h4 id="decimal-numbers">Decimal numbers</h4>
  <p>The GOV.UK Design System has guidance on <a href="https://design-system.service.gov.uk/components/text-input/#asking-for-decimal-numbers">asking for decimal numbers</a>.</p>

  <h3 id="prefixes-and-suffixes">Prefixes and suffixes</h3>
  <p>Use prefixes and suffixes to help users enter things like currencies and measurements.</p>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "prefix-and-suffix" 
  }) }}

  <p>Prefixes and suffixes are useful when there's a commonly understood symbol or abbreviation for the type of information you're asking for. Do not rely on prefixes or suffixes alone, because screen readers will not read them out.</p>
  <p>If you need a specific type of information, say so in the input label or hint text as well. For example, put 'Cost, in pounds' in the input label and use the 'Â£' symbol in the prefix.</p>
  <p>Position prefixes and suffixes so that they're outside of their input. This is to avoid interfering with some browsers that might insert an icon into the input (for example to show or generate a password).</p>
  <p>Some users may miss that the input already has a suffix or prefix, and enter a prefix or suffix into the input. Allow for this in your validation and do not show an error.</p>

  <h4 id="text-inputs-with-a-prefix">Text inputs with a prefix</h4>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "prefix" 
  }) }}

  <h4 id="text-inputs-with-a-suffix">Text inputs with a suffix</h4>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "suffix" 
  }) }}

  <h3 id="error-messages">Error messages</h3>
  <p>Style error messages like this.</p>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "error"
  }) }}

  <h4 id="if-the-input-has-a-prefix-or-a-suffix">If the input has a prefix or a suffix</h4>

  {{ designExample({
    group: "components",
    item: "text-input",
    type: "error-and-prefix-and-suffix" 
  }) }}

  <p>Follow:</p>
  <ul>
    <li><a href="/design-system/components/error-message">our guidance on error messages</a>
    <li><a href="https://design-system.service.gov.uk/components/text-input#error-messages">GOV.UK guidance on error messages for text input</a></li>
  </ul>

  <h3 id="do-not-disable-copy-and-paste">Do not disable copy and paste</h3>
  <p>Users often need to copy and paste information into a text input, so do not stop them doing this.</p>

  <h2>Research</h2>
  <p>If you've used text input, please share your user research findings.</p>

{% endblock %}

