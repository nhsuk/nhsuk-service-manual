{% set pageTitle = "Radios" %}
{% set pageSection = "Design system" %}
{% set subSection = "Components" %}
{% set pageDescription = "Use radios when you want users to select only 1 option from a list." %}
{% set theme = "Form elements" %}
{% set dateUpdated = "October 2025" %}
{% set backlog_issue_id = "19" %}

{% extends "layouts/app-layout.njk" %}

{% block beforeContent %}
  {% include "design-system/components/_breadcrumb.njk" %}
{% endblock %}

{% block bodyContent %}

  <div class="nhsuk-inset-text nhsuk-u-margin-top-0">

    <h3 id="v10-affects-this-component">Radios updates</h3>
    <p>Added smaller radios in version 10.1</p>
    <p>Made <a href="/design-system/guides/updating-to-v10#radios">"breaking code changes" to radios in version 10</a></p>
  </div>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "default"
  }) }}

  <h2 id="when-to-use-this-component">When to use radios</h2>
  <p>Use radios if users can only choose 1 option from a list.</p>

  <h2 id="when-not-to-use-this-component">When not to use radios</h2>
  <p>Do not use radios if users might need to select more than 1 option. Use <a href="/design-system/components/checkboxes">checkboxes</a> instead.</p>

  <h2 id="how-it-works">How to use radios</h2>
  <p>Position radios to the left of their labels. This makes them easier to find, especially for users of screen magnifiers.</p>
  <p>Unlike with checkboxes, users can only select 1 option from a list of radios. Do not assume that users will know how many options they can select based on the visual difference between radios and checkboxes alone. If needed, add a hint explaining this, for example, "Select 1 option".</p>
  <p>Do not pre-select radio options as this makes it more likely that users will:</p>
  <ul>
    <li>not realise they've missed a question</li>
    <li>submit the wrong answer</li>
  </ul>
  <p>Users cannot go back to having no option selected once they have selected an option, without refreshing their browser window. So you should include "None of these" or "I do not know" if they are valid options. In any case, it's best to <a href="/content/how-to-write-good-questions-for-forms/use-filter-questions-to-route-users#beware-binary-choices">beware binary choices</a>.</p>
  <p>Order radio options alphabetically by default.  In some cases, it's helpful to order them from most-to-least common options, for example, by population size. But be careful, as this can reinforce bias. If in doubt, order alphabetically.</p>
  <p>Group radios together in a <code>&lt;fieldset&gt;</code> with a <code>&lt;legend&gt;</code> that describes them. You can see an example at the top of this page. This is usually a question, like "Are you 18 or over?". Read more about using <a href="/design-system/components/fieldset">fieldset</a>.</p>


  <h3 id="inline-radios">Inline radios</h3>
  <p>If there are only 2 short options, you can either stack the radios vertically or display them horizontally (inline).</p>
  <p>On small screens such as mobile devices, the radios will still stack vertically.</p>
  {{ designExample({
    group: "components",
    item: "radios",
    type: "inline"
  }) }}

  <h3 id="radios-with-hints">Radios with hints</h3>
  <p>Use hint text to <a href="/content/how-to-write-good-questions-for-forms/write-the-supporting-content-for-your-form#give-users-help-in-context">give users help in context</a>. Read more about <a href="/design-system/components/hint-text">hint text</a>.</p>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "with-hints"
  }) }}

  <h3 id="radio-items-with-hints">Radio items with hints</h3>
  <p>You can add hints to radios to give more information about the options.</p>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "with-hints-options"
  }) }}

  <h3 id="radio-items-with-a-text-divider">Radio items with a text divider</h3>
  <p>If 1 or more of your radio options is different from the others, it can help users if you separate them using a text divider. The text is usually the word "or".</p>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "items-with-a-text-divider"
  }) }}

  <h3 id="conditionally-revealing-question">Conditionally revealing a related question</h3>
  <p>You can add a conditionally revealing question to radios, so users only see the question when itâ€™s relevant to them.</p>
  <p>For example, you could reveal an email address input only when a user chooses to be contacted by email.</p>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "conditional"
  }) }}

  <p>Keep it simple. If you need to add a lot of content, consider showing it on the next page in the process instead.</p>
  <p>Do not use this component to add conditionally revealing questions to inline radios.</p>
  <p>Only conditionally reveal questions. Do not show or hide anything that is not a question.</p>

  <h4>Known issues</h4>
  <p>Users are not always notified when a conditionally revealed question is shown or hidden. This fails <a href="https://www.w3.org/WAI/WCAG22/Understanding/name-role-value.html">WCAG 2.2 success criterion 4.1.2 name, role, value (W3C)</a></p>
  <p>However, GOV.UK found that screen reader users did not have difficulty answering a conditionally revealed question as long as it's simple. It confused users when they conditionally revealed complicated questions, particularly questions with more than 1 part.</p>

  <h3 id="smaller-radios">Smaller radios</h3>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "smaller"
  }) }}
  <p>Use standard-sized radios in most cases.</p>
  <p>You can use small radios where you need something less visually prominent. For example, on:</p>
  <ul>
  <li>a page of search results where users need to see and change search filters without distracting them from the results</li>
  <li> on information-dense screens in services designed for repeat use, like staff-facing systems</li>
  </ul>

  <h3 id="error-messages">Error messages</h3>
  <p>Display an error message if the user has not:</p>
  <ul>
    <li>selected any radios</li>
    <li>answered a conditionally revealed question</li>
  </ul>
  <p>Style error messages like this.</p>

  {{ designExample({
    group: "components",
    item: "radios",
    type: "error-message"
  }) }}

  <p>Follow:</p>
  <ul>
    <li><a href="/design-system/components/error-message">our guidance on error messages</a></li>
    <li><a href="https://design-system.service.gov.uk/components/radios#error-messages">GOV.UK design system guidance on error messages for radios</a></li>
  </ul>


  <h2>Research</h2>
  <p>Our checkboxes are based on the GOV.UK design system. Read a <a href="https://designnotes.blog.gov.uk/2016/11/30/weve-updated-the-radios-and-checkboxes-on-gov-uk/">GOV.UK blog post about their updates to radios and checkboxes</a>.</p>

{% endblock %}
