{% set pageTitle = 'Development: accessibility guidance' %}
{% set pageDescription = 'What developers need to do to make digital services accessible.' %}

{% extends 'includes/layout.njk' %}

{% block breadcrumb %}
{{ breadcrumb({
  items: [
    {
      href: "/service-manual/",
      text: "Home"
    }
  ],
  href: "/service-manual/accessibility",
  text: "Accessibility"
}) }}
{% endblock %}

{% block body %}
<div class="nhsuk-grid-row">
  <div class="nhsuk-grid-column-two-thirds">
    <h1>{{ pageTitle }}</h1>
    <p class="nhsuk-lede-text">{{ pageDescription }}</p>
  </div>
</div>

<div class="nhsuk-grid-row">
  <div class="nhsuk-grid-column-two-thirds">

    <div class="nhsuk-panel nhsuk-u-margin-top-0">
      <h2 id="check-keyboard-accessibility">Check keyboard accessibility</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Keyboard accessibility is one of the most important parts of accessibility. It enables other input methods, including switches, speech input and screen readers.</p>
      <p>The starting point for keyboard accessibility is to use the correct HTML for links, buttons and form controls. Use <a href="/service-manual/styles-components-patterns">components from the service manual</a>, if you can. They've already been tested for keyboard accessibility.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to test with a keyboard
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Check that you can use:</p>
          <ul>
            <li>tab to progress through links and controls</li>
            <li>shift-tab to reverse</li>
            <li>enter to follow links</li>
            <li>space to select form controls (such as checkboxes)</li>
            <li>arrows for radio-buttons or tabs</li>
          </ul>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Check list for each page
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Check that you can use:</p>
          <ul>
            <li>you can tab to all links, buttons and form controls</li>
            <li>you cannot tab to non-functional elements (such as headings and paragraphs)</li>
            <li>you can easily see where the <a href="/service-manual/accessibility/design#define-focus-styles">focus</a> is</li>
            <li>the focus does not move to hidden elements</li>
            <li>the focus does not get trapped in an element</li>
            <li>scripted events (for keyboard, mouse and touch) only fire when expected</li>
            <li>the visual order for tabbing progress is left-to-right and top-to-bottom</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="set-page-titles">Set page titles</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>A good page title helps users find what they what and recognise they're in the right place. It's the link that shows in search results and the first thing a screenreader will read out when the user lands on a page.</p>
      <p>Each page title must be unique and descriptive. Keep it concise and consider putting important keywords near the beginning.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Best practice
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Best practice is generally: Page name | Section – Sitename</p>
          <p>For example: Achalasia | Health A to Z – NHS</p>
          <p>The first element (here "Achalasia") is the main heading of the page.</p>
          <p>If you can, use templates to keep things consistent and use your content management system to generate everything after the pipe symbol.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="set-language">Set language</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>You need a small bit of markup on every page for screenreaders (and search engines) to know what language the content (or a part of the content) is in.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Code for language
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>In the HTML element, set the language for the whole page to English:</p>
          <pre class="rich-text-inverted"><code>&lt;html lang="en"&gt;</code></pre> or whatever language the page is in.<p></p>
          <p>If there are changes of language within the page, mark these up as well:</p>
          <pre class="rich-text-inverted"><code>&lt;p&gt;Make sure you are treated by a state healthcare provider in France (&lt;span lang="fr"&gt;conventionné&lt;/span&gt;).&lt;/p&gt;</code></pre>
          <p>You can apply the lang attribute to any container.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="use-aria-patterns">Use ARIA patterns</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>ARIA (Accessibility Rich Internet Applications) adds extra information that lets people who use assistive technologies know what's going on. If a component needs more description than HTML provides, you need to mark it up with an ARIA  pattern. </p>
      <p>We use simple examples of ARIA in some of the service manual components, such as <a href="/service-manual/styles-components-patterns/details">details</a>, <a href="/service-manual/styles-components-patterns/breadcrumbs">breadcrumbs</a> and <a href="/service-manual/styles-components-patterns/error-message">error messages</a>.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to use ARIA patterns
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>The W3C note on <a href="https://www.w3.org/TR/using-aria/">using ARIA</a> is a good introduction.</p>
          <p>If you have a complex component, check whether it fits into a defined pattern from the <a href="https://www.w3.org/TR/wai-aria-practices-1.2/">ARIA authoring practices</a>. Patterns that might be useful are:</p>
          <ul>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#accordion">accordions</a></li>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal">modal dialogues</a></li>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#slider">sliders</a></li>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel">tabs</a></li>
          </ul>
          <p>If you use an ARIA pattern, include the ARIA attributes, take responsibility for the keyboard interactions as part of the scripting, and test it with assistive technology.</p>
          <p>Start with the <a href="/service-manual/styles-components-patterns">components in the service manual</a>. They've already been tested. Another useful resource for accessible components is the <a href="https://inclusive-components.design/">Inclusive components</a> collection.</p>
          <p>Read more about <a href="#discuss-any-custom-components">custom components</a>.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="discuss-any-custom-components">Discuss any custom components</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/development">Development</a></p>
      <p>The <a href="/service-manual/styles-components-patterns">components</a> in the service manual are well tested and ready to use. Before you design a new component, please test an existing component and show that there's a clear need for something new.</p>
      <p>Discuss any new components with other members of your team. You need to make sure that:</p>
      <ul>
        <li>you have good evidence that the new component is the best way of meeting the user need</li>
        <li>it will be accessible</li>
        <li>you <a href="/service-manual/accessibility/testing">test it</a></li>
        <li>you share what you've learnt</li>
      </ul>
      <p>Bear in mind that new components add an overhead of testing, from a technical and a usability point of view, and maintenance.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="test-that-text-sizes-and-zooms-correctly">Test that text sizes and zooms correctly</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>People use their browser to change the size of content, and people with low vision may use that to a more extreme level. The guidelines specify a level of 320 (CSS) px wide. That is equivalent to 400% for a 1280px wide browser.</p>
      <p>Users can also override the font-family and spacing for text, which can break a fragile layout. We use this <a href="https://www.html5accessibility.com/tests/tsbookmarklet.html">text spacing bookmarklet</a> to test with.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to test text sizing and zooming
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <ul>
            <li>Check what content and functionality you can see.</li>
            <li>Size your browser window to 1280px wide. (You can use the web developer toolbar in <a href="https://addons.mozilla.org/en-US/firefox/addon/web-developer/">Firefox</a> or <a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm?hl=en">Chrome</a>.)</li>
            <li>Zoom into 400%. (Firefox needs <a href="https://alastairc.uk/2018/02/firefox-zoom-preferences/">a tweak</a> to do this.)</li>
            <li>Check that you can still see all the content and functionality , even if it involves opening show/hide elements or clicking through to another page.</li>
            <li>Activate the text spacing bookmarklet.</li>
            <li>Check for missing or overlapping content and that there is no horizontal scrolling.</li>
            <li>Gradually zoom out to 100%, checking the text spacing at each stage.</li>
          </ul>
        </div>
      </details>

      <p>NHS services must use a responsive design which helps with zooming and take care with layouts that limit text expansion.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Layouts that cause problems
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <ul>
            <li>Fixed height containers of text often break when text spacing is changed. Use min-height instead.</li>
            <li>Sticky elements, or containers that prevent scrolling, are often unusable at higher levels of zoom in landscape orientation. Use vertical media-queries to make sure there is enough space.</li>
            <li>Large data tables are allowed to scroll horizontally, but you should wrap them in an element that contains the scrolling to the table, rather than making the whole page scroll.</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="use-alternative-text-for-functional-images">Use alternative text for functional images</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Some images are "functional". That means that they trigger an action. If people can't see the image, they need an alternative.</p>
      <p>Use "alt‑text" for images. W3C has information about <a href="https://www.w3.org/WAI/tutorials/images/functional/">how to deal with different kinds of functional image</a>.</p>
      <p>For SVG files, we use aria-hidden="true" and, if there is no link text, "visually-hidden" in span tags.</p>
      <p>For some common NHS examples of functional images, see the close and search icons in the <a href="/service-manual/styles-components-patterns/header">header component</a> in the service manual. The <a href="/service-manual/styles-components-patterns/action-link">action link</a> is an example with link text.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="make-video-and-multimedia-accessible">Make video and multimedia accessible</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Consider using video as well as text. Some people find it easier to understand.</p>
      <p>With all video and multimedia, make sure that:</p>
      <ul>
        <li>the interface is accessible for keyboard and screen reader users (including play/pause buttons and the location slider)</li>
        <li>if the user cannot see or hear it, they can still understand it</li>
      </ul>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Stand-alone videos
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>If you are using a video on its own (in other words, if you don't repeat the video content elsewhere on the page), it must have a transcript. The transcript should include all the dialogue, relevant sound effects, and visual content.</p>
          <p>If the video includes dialogue, it should also have captions.</p>
          <p>If the video relies on visual content to convey information (for example, diagrams without a verbal description), it's best to include an audio description. This isn't essential but you must have a transcript.</p>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Videos which supplement page content
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>If the video says the same thing as the page content, you only need captions.</p>
          <p>Make it clear that the video is an alternative to the text content. Put the video near the top of the page so that people don't have to work through the text to find it.</p>
        </div>
      </details>
    </div>

    <h2>Get in touch</h2>
    <p>Join us on the <a href="https://join.slack.com/t/nhs-service-manual/shared_invite/enQtNTIyOTEyNjU3NDkyLWUwOWM5MWY5MGRhYTYxZmY4ZWI0NDA1N2NhNTRiMGY3MTQxNjk5YTc3ZTAzMTA4YmE3ZDAxYmQ3MTQxNDgzOTQ">NHS digital service manual Slack workspace</a> or email the standards team at <a href="mailto:service-manual@nhs.net">service-manual@nhs.net</a>.</p>

    <div class="nhsuk-review-date">
      <p class="nhsuk-body-s">Updated: June 2019</p>
    </div>

  </div>
  <aside class="nhsuk-grid-column-one-third">
    {% include './partials/related-nav.njk' %}
  </aside>
</div>
{% endblock %}
