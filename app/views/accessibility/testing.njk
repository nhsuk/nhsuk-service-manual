{% set pageTitle = 'Testing: accessibility guidance' %}
{% set pageDescription = 'What testers and quality assurers need to do to make digital services accessible.' %}

{% extends 'includes/layout.njk' %}

{% block breadcrumb %}
{{ breadcrumb({
  items: [
    {
      href: "/service-manual/",
      text: "Home"
    }
  ],
  href: "/service-manual/accessibility",
  text: "Accessibility"
}) }}
{% endblock %}

{% block body %}
<div class="nhsuk-grid-row">
  <div class="nhsuk-grid-column-two-thirds">
    <h1>{{ pageTitle }}</h1>
    <p class="nhsuk-lede-text">{{ pageDescription }}</p>
  </div>
</div>

<div class="nhsuk-grid-row">
  <div class="nhsuk-grid-column-two-thirds">

    <div class="nhsuk-panel nhsuk-u-margin-top-0">
      <h2 id="understand-types-of-testing">Understand types of testing</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>There are 3 types of accessibility testing:</p>
      <ul>
        <li>testing with people - see the guidance on <a href="/service-manual/accessibility/user-research">user research</a></li>
        <li>automated testing</li>
        <li>manual testing with guidelines</li>
      </ul>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Automated testing
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Make automated testing part of your build process or use it for a scan across your website or parts of it. Remember that automated tests only check some of what you need to test.</p>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Manual testing
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Manual checks are the most efficient way to test for accessibility issues on individual pages or components.</p>
          <p>Use this guidance and <a href="https://chrome.google.com/webstore/detail/accessibility-insights-fo/pbjjkligggfmakdaogkfomddhfmpjeni">Microsoft's Accessibility Insights Chrome extension</a>.</p>
          <p>It is important to <a href="/service-manual/accessibility/getting-started">learn about accessibility</a> before you start. Otherwise you can waste time wondering about things which aren't a problem or disagreeing with your colleagues.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="check-orientation-is-not-locked">Check orientation is not locked</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Use a mobile device and switch from portrait to landscape and back again. You should be able to see all the content and functionality.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="make-sure-navigation-is-consistent">Make sure navigation is consistent</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Identify any navigational mechanisms (navigation bars, search fields, and skip links) that appear on multiple pages.</p>
      <p>Check that the links or buttons are presented in the same order each time they appear, even if other items are removed or added between them.</p>
      <p>If the navigation is defined by templates, you only need to check 1 or 2 pages.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="set-language">Set language</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>You need a small bit of markup on every page for screenreaders (and search engines) to know what language the content (or a part of the content) is in.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Code for language
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>In the HTML element, set the language for the whole page to English:</p>
          <pre class="rich-text-inverted"><code>&lt;html lang="en"&gt;</code></pre> or whatever language the page is in.<p></p>
          <p>If there are changes of language within the page, mark these up as well:</p>
          <pre class="rich-text-inverted"><code>&lt;p&gt;Make sure you are treated by a state healthcare provider in France (&lt;span lang="fr"&gt;conventionné&lt;/span&gt;).&lt;/p&gt;</code></pre>
          <p>You can apply the lang attribute to any container.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="set-page-titles">Set page titles</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>A good page title helps users find what they what and recognise they're in the right place. It's the link that shows in search results and the first thing a screenreader will read out when the user lands on a page.</p>
      <p>Each page title must be unique and descriptive. Keep it concise and consider putting important keywords near the beginning.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Best practice
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Best practice is generally: Page name | Section – Sitename</p>
          <p>For example: Achalasia | Health A to Z – NHS</p>
          <p>The first element (here "Achalasia") is the main heading of the page.</p>
          <p>If you can, use templates to keep things consistent and use your content management system to generate everything after the pipe symbol.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="define-page-structure">Define page structure</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>You can help people who use assistive technologies understand the structure of the page and navigate it by including "landmarks" (hidden labels for sections of the page). Landmarks also help users looking at multiple pages skip repetitive sections.</p>
      <p>Use ARIA landmarks to identify the regions of a page.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Landmarks you need
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Make sure that you've defined these landmarks if your page includes them:</p>
          <ul>
            <li>banner: at the top of the page, usually contains the logo</li>
            <li>navigation: elements that link to other pages, usually in the banner</li>
            <li>search: the search field, usually in the banner</li>
            <li>main: contains the main content of the page. It should be unique on each page.</li>
            <li>contentinfo: the footer. This is shared across pages.</li>
          </ul>
          <p>You'll need to define headings, lists and data tables in content areas too.</p>
          <p>Follow the <a href="/service-manual/styles-components-patterns/header">header</a> and <a href="/service-manual/styles-components-patterns/footer">footer</a> components in the service manual.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="define-skip-links">Define skip links</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Use a skip link to help keyboard-only users skip to the main content on a page.</p>
      <p>Also add a skip link at the start of a long list of links or form fields (for example, over 20 checkboxes in a filter). This lets people who use keyboard-style access with a switch or head-wand skip to the end and avoid repetitive key-presses.</p>
      <p>Skip links can be invisible by default, but must be very visible when focused.</p>
      <p>Follow the <a href="/service-manual/styles-components-patterns/skip-link">skip link</a> component in the service manual.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="use-headings-correctly">Use headings correctly</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Everyone relies on meaningful headings to navigate the page but they are especially important for some people with access needs. Make sure your headings reflect the page structure.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Structure headings for accessibility
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>The H1 is the same as the page title. You should have only 1 H1 on a page.</p>
          <p>Each main section of your page should start with an H2 and each sub-section of an H2 with an H3. It is possible to have sub-sub-sections which start with an H4.</p>
          <p>With each heading, ask yourself if it's a sub-section of the previous heading. If not, it should be at the same level as (or higher than) the previous section.</p>
          <p>Make sure that headings follow the correct "nesting" order and don't skip levels. The structure of the page is the key thing, not the size and style of the text.</p>
          <p>You can use a web developer toolbar (<a href="https://chrome.google.com/webstore/detail/web-developer-toolbar/deeboegbjcnfgidliakhpoapnpomphji?hl=en">Chrome</a> or <a href="https://addons.mozilla.org/en-GB/firefox/addon/web-developer/">Firefox</a>) to see the overall heading structure of the page.</p>
        </div>
      </details>

      <p>Read more about styling headings in the <a href="/service-manual/styles-components-patterns/typography">typography section</a> of the service manual.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="check-keyboard-accessibility">Check keyboard accessibility</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Keyboard accessibility is one of the most important parts of accessibility. It enables other input methods, including switches, speech input and screen readers.</p>
      <p>The starting point for keyboard accessibility is to use the correct HTML for links, buttons and form controls. Use <a href="/service-manual/styles-components-patterns">components from the service manual</a>, if you can. They've already been tested for keyboard accessibility.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to test with a keyboard
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Check that you can use:</p>
          <ul>
            <li>tab to progress through links and controls</li>
            <li>shift-tab to reverse</li>
            <li>enter to follow links</li>
            <li>space to select form controls (such as checkboxes)</li>
            <li>arrows for radio-buttons or tabs</li>
          </ul>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Check list for each page
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Check that you can use:</p>
          <ul>
            <li>you can tab to all links, buttons and form controls</li>
            <li>you cannot tab to non-functional elements (such as headings and paragraphs)</li>
            <li>you can easily see where the <a href="/service-manual/accessibility/design#define-focus-styles">focus</a> is</li>
            <li>the focus does not move to hidden elements</li>
            <li>the focus does not get trapped in an element</li>
            <li>scripted events (for keyboard, mouse and touch) only fire when expected</li>
            <li>the visual order for tabbing progress is left-to-right and top-to-bottom</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="test-that-text-sizes-and-zooms-correctly">Test that text sizes and zooms correctly</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>People use their browser to change the size of content, and people with low vision may use that to a more extreme level. The guidelines specify a level of 320 (CSS) px wide. That is equivalent to 400% for a 1280px wide browser.</p>
      <p>Users can also override the font-family and spacing for text, which can break a fragile layout. We use this <a href="https://www.html5accessibility.com/tests/tsbookmarklet.html">text spacing bookmarklet</a> to test with.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to test text sizing and zooming
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <ul>
            <li>Check what content and functionality you can see.</li>
            <li>Size your browser window to 1280px wide. (You can use the web developer toolbar in <a href="https://addons.mozilla.org/en-US/firefox/addon/web-developer/">Firefox</a> or <a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm?hl=en">Chrome</a>.)</li>
            <li>Zoom into 400%. (Firefox needs <a href="https://alastairc.uk/2018/02/firefox-zoom-preferences/">a tweak</a> to do this.)</li>
            <li>Check that you can still see all the content and functionality , even if it involves opening show/hide elements or clicking through to another page.</li>
            <li>Activate the text spacing bookmarklet.</li>
            <li>Check for missing or overlapping content and that there is no horizontal scrolling.</li>
            <li>Gradually zoom out to 100%, checking the text spacing at each stage.</li>
          </ul>
        </div>
      </details>

      <p>NHS services must use a responsive design which helps with zooming and take care with layouts that limit text expansion.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Layouts that cause problems
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <ul>
            <li>Fixed height containers of text often break when text spacing is changed. Use min-height instead.</li>
            <li>Sticky elements, or containers that prevent scrolling, are often unusable at higher levels of zoom in landscape orientation. Use vertical media-queries to make sure there is enough space.</li>
            <li>Large data tables are allowed to scroll horizontally, but you should wrap them in an element that contains the scrolling to the table, rather than making the whole page scroll.</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="use-aria-patterns">Use ARIA patterns</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>ARIA (Accessibility Rich Internet Applications) adds extra information that lets people who use assistive technologies know what's going on. If a component needs more description than HTML provides, you need to mark it up with an ARIA  pattern. </p>
      <p>We use simple examples of ARIA in some of the service manual components, such as <a href="/service-manual/styles-components-patterns/details">details</a>, <a href="/service-manual/styles-components-patterns/breadcrumbs">breadcrumbs</a> and <a href="/service-manual/styles-components-patterns/error-message">error messages</a>.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to use ARIA patterns
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>The W3C note on <a href="https://www.w3.org/TR/using-aria/">using ARIA</a> is a good introduction.</p>
          <p>If you have a complex component, check whether it fits into a defined pattern from the <a href="https://www.w3.org/TR/wai-aria-practices-1.2/">ARIA authoring practices</a>. Patterns that might be useful are:</p>
          <ul>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#accordion">accordions</a></li>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal">modal dialogues</a></li>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#slider">sliders</a></li>
            <li><a href="https://www.w3.org/TR/wai-aria-practices-1.2/#tabpanel">tabs</a></li>
          </ul>
          <p>If you use an ARIA pattern, include the ARIA attributes, take responsibility for the keyboard interactions as part of the scripting, and test it with assistive technology.</p>
          <p>Start with the <a href="/service-manual/styles-components-patterns">components in the service manual</a>. They've already been tested. Another useful resource for accessible components is the <a href="https://inclusive-components.design/">Inclusive components</a> collection.</p>
          <p>Read more about <a href="#discuss-any-custom-components">custom components</a>.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="label-form-fields-clearly">Label form fields clearly</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Make sure that every form field has a label that tells users what information they need to enter.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            More about labels
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Put the label next to the form field so that the user is clear which field it relates to.</p>
          <p>Generally the label should be visible. (There's an example of a hidden label "Search the NHS website" on the search box in the NHS.UK header. It doesn't need a visible label because people can see the search icon and the word "Search" in the box.)</p>
          <p>Give grouped items a "legend". You can see examples in the <a href="/service-manual/styles-components-patterns/checkboxes">checkboxes</a> and <a href="/service-manual/styles-components-patterns/radios">radios</a> components in the service manual.</p>
          <p>To test the code is correct, you can usually click on the label and the field should be focused by the browser. Otherwise, check there is a "for" attribute on the label and that it matches the "id" attribute of the field.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="write-good-link-and-form-control-names">Write good link and form control names</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Links needs to make sense out of context as some people experience them that way. Each link should clearly describe where it will take you. For example: "Find your nearest A&amp;E".</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to write good link and form control names
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <ul>
            <li>Ideally link text should match the heading of the target page. If  the target page has the heading "Sleep and tiredness", that's good link text.</li>
            <li>If the target page heading is too long, shorten it but use words from it so that users can predict where the link will take them.</li>
            <li>Avoid ambiguous phrases such as "click here", "read more" and "find out more". It's OK to say: "Read more about <u>how to deal with stress</u>."</li>
            <li>If links open in a new window, say this in the link phrase. For example, "Link name (opens in new window)".</li>
            <li>If the link goes to a document, include the file type and size in the link phrase. For example: "Link name (PDF, 200KB)".</li>
          </ul>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Using the same link text for multiple links
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>You can use the same text for multiple links when they're in a good structure. The table row headings together with the link text must make the meaning clear.</p>
          <p>Here's an example: a list of form fields in a table, with "Change" links at the end of each row.</p>

          <div class="nhsuk-table-responsive">
            <table class="nhsuk-table">
              <caption class="nhsuk-table__caption">Personal details</caption>
              <tbody class="nhsuk-table__body">
              <tr class="nhsuk-table__row">
                <td class="nhsuk-table__cell">Name</td>
                <td class="nhsuk-table__cell">Jo Smith</td>
                <td class="nhsuk-table__cell "><a href="#">Change</a></td>
              </tr>
              <tr class="nhsuk-table__row">
                <td class="nhsuk-table__cell">Date of birth</td>
                <td class="nhsuk-table__cell ">27 February 1982</td>
                <td class="nhsuk-table__cell "><a href="#">Change</a></td>
              </tr>
              </tbody>
            </table>
          </div>
        </div>
      </details>

    </div>

    <div class="nhsuk-panel">
      <h2 id="highlight-errors-in-forms">Highlight errors in forms</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Make sure that error messages clearly describe what went wrong and how to fix the problem.</p>
      <p>Include an error message wherever there's a problem with the input and check that it's visibly obvious that the message is connected to that input.</p>
      <p>If you have an error summary at the top of a form, check that each error in the list has a link that moves the focus to the relevant form field. This helps users who rely on keyboard navigation.</p>
      <p>Use the <a href="/service-manual/styles-components-patterns/error-message">error message</a> and <a href="/service-manual/styles-components-patterns/error-summary">error summary</a> components in the service manual. They've been tested for accessibility and contain links to useful GOV.UK guidance on writing good error messages.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="check-colour-contrast">Check colour contrast</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>It's easier for people to read and interact with content if you use colours that contrast well. The NHS meets at least level AA for contrast and we aim for AAA where possible.</p>

      <h3>AA</h3>
      <p>The contrast ratio should be at least:</p>
      <ul>
        <li>4.5:1 for small text (smaller than 24px, or 19px if bold)</li>
        <li>3:1 for large text (larger than 24px, or 19px if bold) and components (like a text input field) and graphic elements (like an icon)</li>
      </ul>

      <h3>AAA</h3>
      <p>The contrast ratio should be at least:</p>
      <ul>
        <li>7:1 for small text (smaller than 24px, or 19px if bold)</li>
        <li>4.5:1 for large text (larger than 24px, or 19px if bold) and components (like a text input field) and graphic elements (like an icon)</li>
      </ul>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Tools to test colour contrast
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Use a tool to check the colour contrast:</p>
          <ul>
            <li><a href="http://webaim.org/resources/contrastchecker/">Web Aim's colour contrast checker</a></li>
            <li><a href="http://colororacle.org/">Color Oracle (free colour blindness simulator)</a></li>
          </ul>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            More about components and graphic elements
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Use a tool to calculate the ratio between the element and the adjacent colour - for example, the white arrow (foreground) and the green circle (background) in an <a href="/service-manual/styles-components-patterns/action-link">action link</a>.</p>
          <p>If you are relying on users understanding a graphic (like an icon) without text, it must meet the minimum contrast ratio. If it also has text, it doesn't have to meet the requirement but this is still recommended.</p>
          <p>Components that are visible but not currently active (like a submit button that isn't active until you've filled in the form) are exempt from the requirement, but if you can meet the minimum contrast without it being confusing, that will help people with low vision.</p>
        </div>
      </details>

      <p>Read more about <a href="/service-manual/styles-components-patterns/colour">the colours we use</a> in the service manual.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-rely-on-colour-or-position-alone">Do not rely on colour or position alone</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Do not rely on colour to convey meaning, for example, an instruction. To communicate with people who cannot see well or distinguish colours, you may need to:</p>
      <ul>
        <li>word things differently</li>
        <li>use more than one visual cue, for example, text and an icon as well as colour</li>
      </ul>
      <p>Do not rely on people understanding instructions that refer to the position of page elements.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Example
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Do not say "Press the red button on the right".</p>
          <p>If someone is:</p>
          <ul>
            <li>"colour blind", they may not be able to tell the difference between red and green</li>
            <li>zoomed in, the button may not be on the right</li>
            <li>using a screenreader, they may not see the colour - and position, for them, is simply up or down</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="use-alternative-text-for-images-in-content">Use alternative text for images in content</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>People who can't see a meaningful image need an alternative to understand the content. You need to add "alt-text" to explain what's in the image.</p>
      <p>You can see what alt-text an image has by viewing it with <a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm">Chrome's Web Developer toolbar</a>.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Informative images
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>The content of the alt-text depends on the image and its context. If the image is part of the main content of the page (not a <a href="/service-manual/accessibility/testing#use-alternative-text-for-functional-images">functional image</a> - one that triggers an action), use the alt-text to describe the image in a way that makes sense in the context.</p>
          <p>You don't need to explain that it's an image because screenreaders usually announce that. Keep alt-text to a sentence or 2 and no longer than 250 characters.</p>
          <p>Imagine you were reading the page out to a friend. How would you describe the image?</p>
          <p>This is an image from the <a href="https://www.nhs.uk/conditions/bullous-pemphigoid/">NHS.UK bullous pemphigoid page</a>. It comes under a heading "Check if you have bullous pemphigoid". The alt-text is: "Lots of sore red patches with small blisters spread across white skin on a woman's chest." It explains what users can see in the picture.</p>

          <figure class="nhsuk-image nhsuk-u-margin-top-6">
            <img class="nhsuk-image__img" src="https://assets.nhs.uk/prod/images/S_0318_Bullous_pemphigoid_lesions_.2e16d0ba.fill-320x213.jpg" alt="Lots of sore red patches with small blisters spread across white skin on a woman's chest.">
            <figcaption class="nhsuk-image__caption nhsuk-image__caption--grey">
              It can affect large areas of the body or limbs.
            </figcaption>
          </figure>

          <p>The caption underneath the image assumes that the user can either see the image or read the alt-text. It shouldn't duplicate the alt-text. Instead, use it to explain why the image is there and what you want users to conclude from it - for example, how serious their symptom is or what stage their condition has reached.</p>
          <p>Here's another example. The alt-text is "Small red spots on white skin". The caption explains that that's how chickenpox starts.</p>

          <figure class="nhsuk-image nhsuk-u-margin-top-6">
            <img class="nhsuk-image__img" src="https://assets.nhs.uk/prod/images/ABF9YH_GDGeL2X.2e16d0ba.fill-320x213.jpg" alt="Small red spots on white skin">
            <figcaption class="nhsuk-image__caption nhsuk-image__caption--grey">
              1. Chickenpox starts with red spots. They can appear anywhere on the body.
            </figcaption>
          </figure>

          <p>If you have a complex image that you can't describe in short alt-text (such as an infographic), include a longer description in some other way. You can use <a href="/service-manual/styles-components-patterns/expander">an expander</a>, for example, underneath the infographic with a text explanation.</p>
          <p>If your image has text which conveys its meaning, follow <a href="/service-manual/accessibility/development#use-alternative-text-for-functional-images">the guidance on functional images</a>. An example would be a link to a health app which includes a brand image and the name of the app. The app name says the same as the brand image, so the image doesn't need explaining.</p>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Decorative images
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>Decorative images are there to attract users' attention or motivate them, but they don't help users understand the topic. An example might be a bowl of fruit on a healthy eating page.</p>
          <p>If your image is decorative, give it a null text alternative like this: (<code>alt=""</code>).</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="use-alternative-text-for-functional-images">Use alternative text for functional images</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Some images are "functional". That means that they trigger an action. If people can't see the image, they need an alternative.</p>
      <p>Use "alt‑text" for images. W3C has information about <a href="https://www.w3.org/WAI/tutorials/images/functional/">how to deal with different kinds of functional image</a>.</p>
      <p>For SVG files, we use aria-hidden="true" and, if there is no link text, "visually-hidden" in span tags.</p>
      <p>For some common NHS examples of functional images, see the close and search icons in the <a href="/service-manual/styles-components-patterns/header">header component</a> in the service manual. The <a href="/service-manual/styles-components-patterns/action-link">action link</a> is an example with link text.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="make-video-and-multimedia-accessible">Make video and multimedia accessible</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/content">Content</a>, <a href="/service-manual/accessibility/development">Development</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Consider using video as well as text. Some people find it easier to understand.</p>
      <p>With all video and multimedia, make sure that:</p>
      <ul>
        <li>the interface is accessible for keyboard and screen reader users (including play/pause buttons and the location slider)</li>
        <li>if the user cannot see or hear it, they can still understand it</li>
      </ul>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Stand-alone videos
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>If you are using a video on its own (in other words, if you don't repeat the video content elsewhere on the page), it must have a transcript. The transcript should include all the dialogue, relevant sound effects, and visual content.</p>
          <p>If the video includes dialogue, it should also have captions.</p>
          <p>If the video relies on visual content to convey information (for example, diagrams without a verbal description), it's best to include an audio description. This isn't essential but you must have a transcript.</p>
        </div>
      </details>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            Videos which supplement page content
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>If the video says the same thing as the page content, you only need captions.</p>
          <p>Make it clear that the video is an alternative to the text content. Put the video near the top of the page so that people don't have to work through the text to find it.</p>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="give-users-time-to-read-and-act">Give users time to read and act</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>If you have set a time limit for inactivity (for example, on a multi-step form), make it at least 20 hours.</p>
      <p>If you use 3rd party content that has a time limit, it should warn users clearly how much time they have left and let them extend or turn off the time limit.</p>
      <p>There are exceptions to this when the time limit is essential, for  example, for an online test or real-time event.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="check-autocomplete-in-forms">Check autocomplete in forms</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>If you need information only from the person who is filling the form, make sure it has the autocomplete attribute.</p>
      <p>The <a href="https://www.w3.org/TR/html52/sec-forms.html#sec-autofill">W3C autofill table</a> tells you which attribute to use for each type of form field.</p>
      <p>If the form can be filled in for someone else, this isn't necessary.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="check-flashes-and-animation">Check flashes and animation</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Make sure that users can pause, hide or stop anything that moves, blinks or scrolls automatically and lasts more than 5 seconds.</p>
      <p>Pages should not contain anything that flashes more than 3 times in any 1 second. Or the flash should be below the general flash and red flash thresholds.</p>
      <p>Read more about the <a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/seizure-does-not-violate.html">3 flashes or below threshold</a> on the W3C website.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="make-users-aware-of-status-updates-away-from-current-focus">Make users aware of status updates away from current focus</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Make screen reader users aware of important changes in content during a dynamic state in a way that does not interrupt their journey.</p>
      <p>If you need to let users know the results of an action (for example, updated search results or that they have successfully submitted a form), convey this information programmatically.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            How to check status messages
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <ul>
            <li>Use a screen reader to carry out an action that will trigger a message or a change in context dynamically.</li>
            <li>Check whether the message is announced and describes the action accurately.</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-add-keyboard-shortcuts">Do not add keyboard shortcuts</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Do not use single letter keyboard shortcuts. (Gmail, for example, uses the "j" and "k" keys to move between emails.)</p>
      <p>Keyboard shortcuts which use single numbers, punctuation, lowercase letters, uppercase letters or symbol characters can interfere with voice input software.</p>

      <details class="nhsuk-details">
        <summary class="nhsuk-details__summary">
          <span class="nhsuk-details__summary-text">
            3rd party content
          </span>
        </summary>
        <div class="nhsuk-details__text">
          <p>If you use 3rd party content with these types of shortcuts, you must have one of these:</p>
          <ul>
            <li>a mechanism that allows users to turn off character key shortcuts</li>
            <li>a functionality to remap the shortcuts to use more than one character (for example, ALT + j)</li>
          </ul>
        </div>
      </details>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-override-visible-labels">Do not override visible labels</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Make sure that ARIA or HTML labels for buttons, links or anchors match or contain the same words as visible labels. That applies whether the visible label is in text or <a href="/service-manual/accessibility/testing#do-not-include-text-in-images">an image of text</a>.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-use-onkeydown-or-onmousedown-for-links-and-buttons">Do not use "onkeydown" or "onmousedown" for links and buttons</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>For interactive elements, only trigger actions once the user takes their finger or pointer away from the activation target. This gives users a chance to cancel or avoid activating the trigger.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-include-text-in-images">Do not include text in images</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/design">Design</a>, <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Users need as much information as possible in text format, so that they can adjust its size, spacing or formatting.</p>
      <p>Do not include text in graphical (raster) formats like PNG, JPEG or GIF. They do not work well when users zoom in. Instead put text in HTML (styled with CSS) or use SVG.</p>
      <p>This doesn't apply to logos.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-trigger-pop-ups-by-hover-or-focus">Do not trigger pop-ups by hover or focus</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Do not trigger additional content by mouse hover or keyboard focus. It causes problems for people using zoom or a screen magnifier.</p>
      <p>If you use 3rd party content which does this, make sure you give users a way to dismiss the content without moving the mouse or focus. For example, use the ESC key.</p>
    </div>

    <div class="nhsuk-panel">
      <h2>Do not play audio automatically</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Audio must not play automatically for more than 3 seconds. It makes it hard for people to hear their screen reader.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-rely-on-touch-gestures">Do not rely on touch gestures</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>Do not rely on touch, even for interfaces designed for touch screens. You can use touch gestures but you need a standard fallback.</p>
      <p>For example, if you swipe between images, you also need a button that does the same thing for people using switch access or screen readers.</p>
    </div>

    <div class="nhsuk-panel">
      <h2 id="do-not-rely-on-motion-sensors">Do not rely on motion sensors</h2>
      <p class="nhsuk-body-s">For: <a href="/service-manual/accessibility/testing">Testing</a></p>
      <p>If you have any functionality that is triggered by device or user motion (like shaking or tilting), you must provide another way for users to activate it. For example, let the user press a button.</p>
      <p>Also make sure that users can disable motion actions.</p>
    </div>

    <h2>Get in touch</h2>
    <p>Join us on the <a href="https://join.slack.com/t/nhs-service-manual/shared_invite/enQtNTIyOTEyNjU3NDkyLWUwOWM5MWY5MGRhYTYxZmY4ZWI0NDA1N2NhNTRiMGY3MTQxNjk5YTc3ZTAzMTA4YmE3ZDAxYmQ3MTQxNDgzOTQ">NHS digital service manual Slack workspace</a> or email the standards team at <a href="mailto:service-manual@nhs.net">service-manual@nhs.net</a>.</p>

    <div class="nhsuk-review-date">
      <p class="nhsuk-body-s">Updated: June 2019</p>
    </div>

  </div>
  <aside class="nhsuk-grid-column-one-third">
    {% include './partials/related-nav.njk' %}
  </aside>
</div>
{% endblock %}
